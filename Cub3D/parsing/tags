		../minilibx/recherche.vim	/^inoremap <silent> 	 =UltiSnips#ExpandSnippetOrJump()$/;"	m
		../parsing/!parsing.vim	/^inoremap <silent> 	 =UltiSnips#ExpandSnippetOrJump()$/;"	m
		../parsing/parsing.vim	/^inoremap <silent> 	 =UltiSnips#ExpandSnippetOrJump()$/;"	m
	../minilibx/recherche.vim	/^map  :NERDTreeToggle$/;"	m
	../parsing/!parsing.vim	/^map  :NERDTreeToggle$/;"	m
	../parsing/parsing.vim	/^map  :NERDTreeToggle$/;"	m
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
0	../parsing/!parsing.vim	/^normal! 0$/;"	m
0	../parsing/parsing.vim	/^normal! 0$/;"	m
023|	../minilibx/recherche.vim	/^normal! 023|$/;"	m
02|	../parsing/!parsing.vim	/^normal! 02|$/;"	m
02|	../parsing/parsing.vim	/^normal! 02|$/;"	m
030|	../minilibx/recherche.vim	/^normal! 030|$/;"	m
033|	../minilibx/recherche.vim	/^normal! 033|$/;"	m
09|	../parsing/parsing.vim	/^normal! 09|$/;"	m
<C-N>	../minilibx/recherche.vim	/^map <C-N> :NERDTreeToggle$/;"	m
<C-N>	../parsing/!parsing.vim	/^map <C-N> :NERDTreeToggle$/;"	m
<C-N>	../parsing/parsing.vim	/^map <C-N> :NERDTreeToggle$/;"	m
<C-Tab>	../minilibx/recherche.vim	/^inoremap <silent> <C-Tab> =UltiSnips#ListSnippets()$/;"	m
<C-Tab>	../parsing/!parsing.vim	/^inoremap <silent> <C-Tab> =UltiSnips#ListSnippets()$/;"	m
<C-Tab>	../parsing/parsing.vim	/^inoremap <silent> <C-Tab> =UltiSnips#ListSnippets()$/;"	m
<F2>	../minilibx/recherche.vim	/^nmap <F2> :Stdheader$/;"	m
<F2>	../parsing/!parsing.vim	/^nmap <F2> :Stdheader$/;"	m
<F2>	../parsing/parsing.vim	/^nmap <F2> :Stdheader$/;"	m
<F3>	../minilibx/recherche.vim	/^noremap <F3> :call FoldToggle()$/;"	m
<F3>	../parsing/!parsing.vim	/^noremap <F3> :call FoldToggle()$/;"	m
<F3>	../parsing/parsing.vim	/^noremap <F3> :call FoldToggle()$/;"	m
<Plug>(CommandT)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandT) :CommandT$/;"	m
<Plug>(CommandT)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandT) :CommandT$/;"	m
<Plug>(CommandT)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandT) :CommandT$/;"	m
<Plug>(CommandTBuffer)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandTBuffer) :CommandTBuffer$/;"	m
<Plug>(CommandTBuffer)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandTBuffer) :CommandTBuffer$/;"	m
<Plug>(CommandTBuffer)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandTBuffer) :CommandTBuffer$/;"	m
<Plug>(CommandTCommand)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandTCommand) :CommandTCommand$/;"	m
<Plug>(CommandTCommand)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandTCommand) :CommandTCommand$/;"	m
<Plug>(CommandTCommand)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandTCommand) :CommandTCommand$/;"	m
<Plug>(CommandTHelp)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandTHelp) :CommandTHelp$/;"	m
<Plug>(CommandTHelp)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandTHelp) :CommandTHelp$/;"	m
<Plug>(CommandTHelp)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandTHelp) :CommandTHelp$/;"	m
<Plug>(CommandTHistory)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandTHistory) :CommandTHistory$/;"	m
<Plug>(CommandTHistory)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandTHistory) :CommandTHistory$/;"	m
<Plug>(CommandTHistory)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandTHistory) :CommandTHistory$/;"	m
<Plug>(CommandTJump)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandTJump) :CommandTJump$/;"	m
<Plug>(CommandTJump)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandTJump) :CommandTJump$/;"	m
<Plug>(CommandTJump)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandTJump) :CommandTJump$/;"	m
<Plug>(CommandTLine)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandTLine) :CommandTLine$/;"	m
<Plug>(CommandTLine)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandTLine) :CommandTLine$/;"	m
<Plug>(CommandTLine)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandTLine) :CommandTLine$/;"	m
<Plug>(CommandTMRU)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandTMRU) :CommandTMRU$/;"	m
<Plug>(CommandTMRU)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandTMRU) :CommandTMRU$/;"	m
<Plug>(CommandTMRU)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandTMRU) :CommandTMRU$/;"	m
<Plug>(CommandTSearch)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandTSearch) :CommandTSearch$/;"	m
<Plug>(CommandTSearch)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandTSearch) :CommandTSearch$/;"	m
<Plug>(CommandTSearch)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandTSearch) :CommandTSearch$/;"	m
<Plug>(CommandTTag)	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>(CommandTTag) :CommandTTag$/;"	m
<Plug>(CommandTTag)	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>(CommandTTag) :CommandTTag$/;"	m
<Plug>(CommandTTag)	../parsing/parsing.vim	/^nnoremap <silent> <Plug>(CommandTTag) :CommandTTag$/;"	m
<Plug>Colorizer	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>Colorizer :ColorToggle$/;"	m
<Plug>Colorizer	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>Colorizer :ColorToggle$/;"	m
<Plug>Colorizer	../parsing/parsing.vim	/^nnoremap <silent> <Plug>Colorizer :ColorToggle$/;"	m
<Plug>NetrwBrowseX	../minilibx/recherche.vim	/^nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())$/;"	m
<Plug>NetrwBrowseX	../parsing/!parsing.vim	/^nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())$/;"	m
<Plug>NetrwBrowseX	../parsing/parsing.vim	/^nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())$/;"	m
<Plug>NetrwBrowseXVis	../minilibx/recherche.vim	/^vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()$/;"	m
<Plug>NetrwBrowseXVis	../parsing/!parsing.vim	/^vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()$/;"	m
<Plug>NetrwBrowseXVis	../parsing/parsing.vim	/^vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()$/;"	m
<Plug>vim_completes_me_backward	../minilibx/recherche.vim	/^inoremap <expr> <Plug>vim_completes_me_backward VimCompletesMe#vim_completes_me(1)$/;"	m
<Plug>vim_completes_me_backward	../parsing/!parsing.vim	/^inoremap <expr> <Plug>vim_completes_me_backward VimCompletesMe#vim_completes_me(1)$/;"	m
<Plug>vim_completes_me_backward	../parsing/parsing.vim	/^inoremap <expr> <Plug>vim_completes_me_backward VimCompletesMe#vim_completes_me(1)$/;"	m
<Plug>vim_completes_me_forward	../minilibx/recherche.vim	/^inoremap <expr> <Plug>vim_completes_me_forward VimCompletesMe#vim_completes_me(0)$/;"	m
<Plug>vim_completes_me_forward	../parsing/!parsing.vim	/^inoremap <expr> <Plug>vim_completes_me_forward VimCompletesMe#vim_completes_me(0)$/;"	m
<Plug>vim_completes_me_forward	../parsing/parsing.vim	/^inoremap <expr> <Plug>vim_completes_me_forward VimCompletesMe#vim_completes_me(0)$/;"	m
<S-Tab>	../minilibx/recherche.vim	/^imap <S-Tab> <Plug>vim_completes_me_backward$/;"	m
<S-Tab>	../parsing/!parsing.vim	/^imap <S-Tab> <Plug>vim_completes_me_backward$/;"	m
<S-Tab>	../parsing/parsing.vim	/^imap <S-Tab> <Plug>vim_completes_me_backward$/;"	m
<SNR>110_:	../parsing/!parsing.vim	/^nnoremap <SNR>110_: :=v:count ? v:count : ''$/;"	m
<SNR>110_:	../parsing/parsing.vim	/^nnoremap <SNR>110_: :=v:count ? v:count : ''$/;"	m
<SNR>112_:	../minilibx/recherche.vim	/^nnoremap <SNR>112_: :=v:count ? v:count : ''$/;"	m
<SNR>114_:	../parsing/!parsing.vim	/^nnoremap <SNR>114_: :=v:count ? v:count : ''$/;"	m
BUFFER_SIZE	../libft/get_next_line.c	/^#define BUFFER_SIZE /;"	d	file:
C	../cub3d.h	/^	int					C[3];$/;"	m	struct:s_elem
CC	../libft/makefile	/^CC		= gcc$/;"	m
CC	../makefile	/^CC			= gcc$/;"	m
CFLAGS	../libft/makefile	/^CFLAGS	= -Wall -Wextra -Werror$/;"	m
CFLAGS	../makefile	/^CFLAGS		= $/;"	m
CHECKER	../cub3d.h	/^# define CHECKER /;"	d
CUB3D_H	../cub3d.h	/^# define CUB3D_H$/;"	d
DEP	../libft/makefile	/^DEP		:= $(SRC:%.c=$(DEP_DIR)\/%.d)$/;"	m
DEPB	../libft/makefile	/^DEPB	:= $(SRCB:%.c=$(DEP_DIR)\/%.d)$/;"	m
DEP_DIR	../libft/makefile	/^DEP_DIR	= dep$/;"	m
DFLAGS	../libft/makefile	/^DFLAGS	= -MP -MMD -MF $(DEP_DIR)\/$*.d -MT '$@'$/;"	m
DIR	../libft/makefile	/^DIR		= $(DEP_DIR) $(OBJ_DIR)$/;"	m
ERROR_ELEM	../cub3d.h	/^# define ERROR_ELEM /;"	d
ERROR_MAP	../cub3d.h	/^# define ERROR_MAP /;"	d
ERROR_MAP_E_WALL	../cub3d.h	/^# define ERROR_MAP_E_WALL /;"	d
ERROR_MAP_NO	../cub3d.h	/^# define ERROR_MAP_NO /;"	d
ERROR_MAP_N_WALL	../cub3d.h	/^# define ERROR_MAP_N_WALL /;"	d
ERROR_MAP_S_WALL	../cub3d.h	/^# define ERROR_MAP_S_WALL /;"	d
ERROR_MAP_W_WALL	../cub3d.h	/^# define ERROR_MAP_W_WALL /;"	d
ERROR_NO_FILE	../cub3d.h	/^# define ERROR_NO_FILE /;"	d
ERROR_P_EX_POS	../cub3d.h	/^# define ERROR_P_EX_POS /;"	d
ERROR_P_NO_POS	../cub3d.h	/^# define ERROR_P_NO_POS /;"	d
ERR_DATA_FILTER	../minilibx/mlx_png.c	/^#define	ERR_DATA_FILTER	/;"	d	file:
ERR_DATA_MISMATCH	../minilibx/mlx_png.c	/^#define	ERR_DATA_MISMATCH	/;"	d	file:
ERR_MAGIC_SIZE	../minilibx/mlx_png.c	/^#define	ERR_MAGIC_SIZE	/;"	d	file:
ERR_MAGIC_WRONG	../minilibx/mlx_png.c	/^#define	ERR_MAGIC_WRONG	/;"	d	file:
ERR_STRUCT_CRC	../minilibx/mlx_png.c	/^#define	ERR_STRUCT_CRC	/;"	d	file:
ERR_STRUCT_DAT	../minilibx/mlx_png.c	/^#define	ERR_STRUCT_DAT	/;"	d	file:
ERR_STRUCT_END	../minilibx/mlx_png.c	/^#define	ERR_STRUCT_END	/;"	d	file:
ERR_STRUCT_HDR	../minilibx/mlx_png.c	/^#define	ERR_STRUCT_HDR	/;"	d	file:
ERR_STRUCT_INCIMPL	../minilibx/mlx_png.c	/^#define	ERR_STRUCT_INCIMPL /;"	d	file:
ERR_STRUCT_INCOMPLETE	../minilibx/mlx_png.c	/^#define	ERR_STRUCT_INCOMPLETE	/;"	d	file:
ERR_STRUCT_MISSCHK	../minilibx/mlx_png.c	/^#define	ERR_STRUCT_MISSCHK	/;"	d	file:
ERR_ZLIB	../minilibx/mlx_png.c	/^#define	ERR_ZLIB	/;"	d	file:
F	../cub3d.h	/^	int					F[3];$/;"	m	struct:s_elem
FONT_HEIGHT	../minilibx/mlx_int.h	/^#define	FONT_HEIGHT	/;"	d
FONT_WIDTH	../minilibx/mlx_int.h	/^#define FONT_WIDTH	/;"	d
FT_PRINTF_H	../libft/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
LIBFT	../makefile	/^LIBFT		= libft\/libft.a$/;"	m
LIBFT_H	../libft/libft.h	/^# define LIBFT_H$/;"	d
LOGFILE	../makefile	/^LOGFILE		= $(LOGPATH) `date +'%y.%m.%d %H:%M:%S'`$/;"	m
MAX_EVENT	../minilibx/mlx_int.h	/^#define	MAX_EVENT	/;"	d
MAX_PIXEL_NB	../minilibx/mlx_int.h	/^#define MAX_PIXEL_NB	/;"	d
MINUS	../libft/ft_printf.h	/^# define MINUS /;"	d
MLXFLAGS	../makefile	/^MLXFLAGS	= -lmlx -framework OpenGL -framework Appkit $/;"	m
MLX_H	../minilibx/mlx.h	/^#define	MLX_H$/;"	d
NAME	../libft/makefile	/^NAME	= libft.a$/;"	m
NAME	../makefile	/^NAME		= cub3d$/;"	m
NOM	../minilibx/Makefile	/^NOM=libmlx.a$/;"	m
NUL	../libft/ft_printf.h	/^# define NUL /;"	d
OBJ	../libft/makefile	/^OBJ 	:= $(SRC:%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJ	../minilibx/Makefile	/^OBJ=$(OBJ1:.m=.o)$/;"	m
OBJ1	../minilibx/Makefile	/^OBJ1=$(SRC:.c=.o)$/;"	m
OBJB	../libft/makefile	/^OBJB 	:= $(SRCB:%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJ_DIR	../libft/makefile	/^OBJ_DIR	= obj$/;"	m
PNG_HDR_SIZE	../minilibx/mlx_png.c	/^#define PNG_HDR_SIZE	/;"	d	file:
PNG_MAGIC_SIZE	../minilibx/mlx_png.c	/^#define	PNG_MAGIC_SIZE	/;"	d	file:
POINT	../libft/ft_printf.h	/^# define POINT /;"	d
R	../cub3d.h	/^	int					R[2];$/;"	m	struct:s_elem
RETURN	../minilibx/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RM	../makefile	/^RM			= rm -f$/;"	m
SRC	../libft/makefile	/^SRC		= ft_strlen.c ft_strlcpy.c ft_strchr.c ft_strrchr.c ft_strncmp.c ft_strlcat.c \\$/;"	m
SRC	../minilibx/Makefile	/^SRC= mlx_shaders.c mlx_new_window.m mlx_init_loop.m mlx_new_image.m mlx_xpm.c mlx_int_str_to_wordtab.c$/;"	m
SRCB	../libft/makefile	/^SRCB	=$/;"	m
SRCS	../makefile	/^SRCS		= main_test.c display_map.c parsing\/parsing.c parsing\/parsing_elem.c parsing\/error_free.c parsing\/full_map.c$/;"	m
SessionLoad	../minilibx/recherche.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	../parsing/!parsing.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	../parsing/parsing.vim	/^let SessionLoad = 1$/;"	v
UNIQ_BPP	../minilibx/mlx_int.h	/^#define UNIQ_BPP	/;"	d
ZERO	../libft/ft_printf.h	/^# define ZERO /;"	d
Z_CHUNK	../minilibx/mlx_png.c	/^#define	Z_CHUNK	/;"	d	file:
\b	../minilibx/recherche.vim	/^nmap \\b <Plug>(CommandTBuffer)$/;"	m
\b	../parsing/!parsing.vim	/^nmap \\b <Plug>(CommandTBuffer)$/;"	m
\b	../parsing/parsing.vim	/^nmap \\b <Plug>(CommandTBuffer)$/;"	m
\j	../minilibx/recherche.vim	/^nmap \\j <Plug>(CommandTJump)$/;"	m
\j	../parsing/!parsing.vim	/^nmap \\j <Plug>(CommandTJump)$/;"	m
\j	../parsing/parsing.vim	/^nmap \\j <Plug>(CommandTJump)$/;"	m
\t	../minilibx/recherche.vim	/^nmap \\t <Plug>(CommandT)$/;"	m
\t	../parsing/!parsing.vim	/^nmap \\t <Plug>(CommandT)$/;"	m
\t	../parsing/parsing.vim	/^nmap \\t <Plug>(CommandT)$/;"	m
\tc	../minilibx/recherche.vim	/^nmap \\tc <Plug>Colorizer$/;"	m
\tc	../parsing/!parsing.vim	/^nmap \\tc <Plug>Colorizer$/;"	m
\tc	../parsing/parsing.vim	/^nmap \\tc <Plug>Colorizer$/;"	m
alpha	../cub3d.h	/^	double				alpha;$/;"	m	struct:s_P
appid	../minilibx/mlx_int.h	/^  void			*appid;$/;"	m	struct:mlx_ptr_s
arg	../libft/ft_printf.h	/^	char		arg;$/;"	m	struct:s_flags
bit_elem	../cub3d.h	/^	short				bit_elem;$/;"	m	struct:s_elem
bpp	../cub3d.h	/^	int		bpp;$/;"	m	struct:s_image
bpp	../minilibx/mlx_png.c	/^  int		bpp;$/;"	m	struct:png_info_s	file:
bpp	../test.c	/^	int		bpp;$/;"	m	struct:s_image	file:
buff	../libft/libft.h	/^	char				*buff;$/;"	m	struct:s_list_gnl
buffer	../cub3d.h	/^	int 	*buffer;$/;"	m	struct:s_image
buffer	../minilibx/mlx_int.h	/^  char			*buffer;$/;"	m	struct:mlx_img_list_s
buffer	../test.c	/^	int 	*buffer;$/;"	m	struct:s_image	file:
bytes_per_pixel	../minilibx/font.c	/^  unsigned int 	 bytes_per_pixel; \/* 2:RGB16, 3:RGB, 4:RGBA *\/ $/;"	m	struct:__anon1	file:
check_elem	../parsing/parsing.c	/^int			check_elem(char *str, t_elem *elem)$/;"	f
check_map	../parsing/full_map.c	/^void		*check_map(t_elem *elem)$/;"	f
check_map2	../parsing/full_map.c	/^void		check_map2(t_elem *elem, int j)$/;"	f
click_mouse	../main_test.c	/^int		click_mouse(int key)$/;"	f
col	../minilibx/mlx_xpm.c	/^  int           col;$/;"	m	struct:s_xpm_col	file:
color	../minilibx/mlx_png.c	/^  int		color;$/;"	m	struct:png_info_s	file:
color	../minilibx/mlx_xpm.c	/^  int   color;$/;"	m	struct:s_col_name	file:
color_square	../display_map.c	/^void		color_square(int i, t_mini *mini, int color, int mult)$/;"	f
content	../libft/libft.h	/^	void				*content;$/;"	m	struct:s_list
crc_table	../minilibx/mlx_png.c	/^unsigned long crc_table[256] = { 0, 0x77073096, 0xee0e612c, 0x990951ba, 0x76dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0xedb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x9b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x1db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x6b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0xf00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x86d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x3b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x4db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0xd6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0xa00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x26d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x5005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0xcb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0xbdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d };$/;"	v
data_s	../minilibx/main_test.c	/^typedef struct    data_s$/;"	s	file:
data_s	../test.c	/^typedef struct			data_s$/;"	s	file:
data_t	../minilibx/main_test.c	/^}                 data_t;$/;"	t	typeref:struct:data_s	file:
data_t	../test.c	/^}						data_t;$/;"	t	typeref:struct:data_s	file:
depth	../minilibx/mlx_png.c	/^  int		depth;$/;"	m	struct:png_info_s	file:
destroy	../main_test.c	/^int	destroy(t_elem *elem)$/;"	f
display_log	../minilibx/mlx_shaders.c	/^void display_log(GLuint object, void (*param_func)(), void (*getlog_func)())$/;"	f
display_map	../display_map.c	/^void		display_map(t_data *D, t_elem *elem, int t_case)$/;"	f
elem	../cub3d.h	/^	t_elem				*elem;$/;"	m	struct:s_data
endian	../cub3d.h	/^	int		endian;$/;"	m	struct:s_image
endian	../test.c	/^	int		endian;$/;"	m	struct:s_image	file:
f_l	../libft/ft_split.c	/^static int		f_l(char *s, char c, int i)$/;"	f	file:
fd	../libft/libft.h	/^	int					fd;$/;"	m	struct:s_list_gnl
fill_int	../parsing/parsing_elem.c	/^int			fill_int(int bit, char *str, int *tab, short *bit_elem)$/;"	f
fill_int_rgb	../parsing/parsing_elem.c	/^int			fill_int_rgb(int bit, char *str, int *tab, short *bit_elem)$/;"	f
fill_str	../parsing/parsing_elem.c	/^void		fill_str(int bit, char *str, t_elem *elem)$/;"	f
font	../minilibx/mlx_int.h	/^  mlx_img_list_t	*font;$/;"	m	struct:mlx_ptr_s
font_atlas	../minilibx/font.c	/^} font_atlas = {$/;"	v	typeref:struct:__anon1	file:
font_fshader	../minilibx/mlx_int.h	/^  GLuint	font_fshader;$/;"	m	struct:glsl_info_s
font_program	../minilibx/mlx_int.h	/^  GLuint	font_program;$/;"	m	struct:glsl_info_s
font_vshader	../minilibx/mlx_int.h	/^  GLuint	font_vshader;$/;"	m	struct:glsl_info_s
free_elem	../parsing/error_free.c	/^void		free_elem(t_elem *elem)$/;"	f
ft_atoi	../libft/ft_atoi.c	/^int		ft_atoi(const char *str)$/;"	f
ft_atoi_pos	../libft/ft_atoi_pos.c	/^int		ft_atoi_pos(const char *str)$/;"	f
ft_before_char	../libft/get_next_line_utils.c	/^char		*ft_before_char(char *str, char stop)$/;"	f
ft_bzero	../libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_bzero_tab	../libft/ft_strsubstr.c	/^static void	ft_bzero_tab(int *tab)$/;"	f	file:
ft_bzero_tab	../libft/ft_strsubstr_free.c	/^static void	ft_bzero_tab(int *tab)$/;"	f	file:
ft_calloc	../libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_cleanstruct	../libft/ft_printf.c	/^int		ft_cleanstruct(t_flags *flags)$/;"	f
ft_count_c	../libft/ft_itoa.c	/^static int			ft_count_c(long int n, int i)$/;"	f	file:
ft_count_char_int	../libft/ft_count_char_int.c	/^int			ft_count_char_int(long int nb, int base)$/;"	f
ft_count_char_int	../libft/ft_flags.c	/^int			ft_count_char_int(long int nb, int base)$/;"	f
ft_del	../libft/get_next_line.c	/^void		ft_del(t_list_gnl **lst_one)$/;"	f
ft_display_before	../libft/ft_fct.c	/^int				ft_display_before(t_flags *flags, long int nb)$/;"	f
ft_error	../parsing/error_free.c	/^void		*ft_error(char *str, t_elem *elem)$/;"	f
ft_error_map	../parsing/error_free.c	/^void		*ft_error_map(char *str, t_elem *elem, int i)$/;"	f
ft_exist	../libft/get_next_line.c	/^int			ft_exist(t_list_gnl **lst, char **line)$/;"	f
ft_find	../libft/get_next_line_utils.c	/^int			ft_find(char *str, char stop)$/;"	f
ft_find_c	../libft/ft_split.c	/^static int		ft_find_c(char letter, char c)$/;"	f	file:
ft_find_c	../libft/ft_strtrim.c	/^static int		ft_find_c(char c, char const *set)$/;"	f	file:
ft_free	../libft/ft_split.c	/^static char		**ft_free(char **tab_words, int i)$/;"	f	file:
ft_free	../libft/ft_splitnum.c	/^static char		**ft_free(char **tab_words, int i)$/;"	f	file:
ft_get_fct	../libft/ft_printf.c	/^int		ft_get_fct(char **str, va_list ap, t_flags *flags)$/;"	f
ft_get_flags	../libft/ft_printf.c	/^int		ft_get_flags(char **str, t_flags *flags, va_list ap)$/;"	f
ft_how_many	../libft/ft_how_many.c	/^int		ft_how_many(char *str, char *tab)$/;"	f
ft_init_mask	../libft/ft_flags.c	/^void		ft_init_mask(t_flags *flags, long int nb, int base)$/;"	f
ft_isalnum	../libft/ft_isalnum.c	/^int		ft_isalnum(int c)$/;"	f
ft_isalpha	../libft/ft_isalpha.c	/^int		ft_isalpha(int c)$/;"	f
ft_isascii	../libft/ft_isascii.c	/^int		ft_isascii(int c)$/;"	f
ft_isdigit	../libft/ft_isdigit.c	/^int		ft_isdigit(int c)$/;"	f
ft_isfind	../libft/ft_isfind.c	/^int			ft_isfind(char *str, char stop)$/;"	f
ft_isprint	../libft/ft_isprint.c	/^int		ft_isprint(int c)$/;"	f
ft_itoa	../libft/ft_itoa.c	/^char				*ft_itoa(int n)$/;"	f
ft_memccpy	../libft/ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c, size_t n)$/;"	f
ft_memchr	../libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	../libft/ft_memcmp.c	/^int		ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	../libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memmove	../libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	../libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_new_lst	../libft/get_next_line.c	/^void		ft_new_lst(int fd, t_list_gnl **lst_one)$/;"	f
ft_precis	../libft/ft_flags.c	/^int			ft_precis(va_list ap, t_flags *flags, char **str)$/;"	f
ft_printf	../libft/ft_printf.c	/^int		ft_printf(const char *format, ...)$/;"	f
ft_printstr	../libft/ft_printf.c	/^int		ft_printstr(char **str)$/;"	f
ft_process	../libft/ft_itoa.c	/^static char			ft_process(char *s, long int nbr)$/;"	f	file:
ft_put_ptr	../libft/ft_p.c	/^int				ft_put_ptr(va_list ap, t_flags *flags)$/;"	f
ft_put_ptr2	../libft/ft_p.c	/^static int		ft_put_ptr2(unsigned long nb, t_flags *flags)$/;"	f	file:
ft_putchar	../libft/ft_putchar.c	/^void	ft_putchar(char c)$/;"	f
ft_putchar_fd	../libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putchar_int	../libft/ft_putchar_int.c	/^int	ft_putchar_int(char c)$/;"	f
ft_putchar_mod	../libft/ft_fct.c	/^int				ft_putchar_mod(va_list ap, t_flags *flags)$/;"	f
ft_putchar_mod2	../libft/ft_fct.c	/^static int		ft_putchar_mod2(void)$/;"	f	file:
ft_putchar_ptf	../libft/ft_cs.c	/^int				ft_putchar_ptf(va_list ap, t_flags *flags)$/;"	f
ft_putchar_ptf2	../libft/ft_cs.c	/^static int		ft_putchar_ptf2(char c)$/;"	f	file:
ft_putendl	../libft/ft_putendl.c	/^void	ft_putendl(char *s)$/;"	f
ft_putendl_fd	../libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f
ft_puthexa_max	../libft/ft_x.c	/^int				ft_puthexa_max(va_list ap, t_flags *flags)$/;"	f
ft_puthexa_maxb	../libft/ft_x.c	/^static int		ft_puthexa_maxb(unsigned int nb, t_flags *flags)$/;"	f	file:
ft_puthexa_min	../libft/ft_x.c	/^int				ft_puthexa_min(va_list ap, t_flags *flags)$/;"	f
ft_puthexa_minb	../libft/ft_x.c	/^static int		ft_puthexa_minb(unsigned int nb, t_flags *flags)$/;"	f	file:
ft_putnbr	../libft/ft_putnbr.c	/^void	ft_putnbr(int n)$/;"	f
ft_putnbr_fd	../libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putnbr_int	../libft/ft_diu.c	/^int				ft_putnbr_int(va_list ap, t_flags *flags)$/;"	f
ft_putnbr_intb	../libft/ft_diu.c	/^static int		ft_putnbr_intb(int nb, t_flags *flags)$/;"	f	file:
ft_putnbr_uint	../libft/ft_diu.c	/^int				ft_putnbr_uint(va_list ap, t_flags *flags)$/;"	f
ft_putnbr_uintb	../libft/ft_diu.c	/^static int		ft_putnbr_uintb(unsigned int nb, t_flags *flags)$/;"	f	file:
ft_putstr	../libft/ft_putstr.c	/^void	ft_putstr(char *str)$/;"	f
ft_putstr_fd	../libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *str, int fd)$/;"	f
ft_putstr_int	../libft/ft_cs.c	/^int				ft_putstr_int(va_list ap, t_flags *flags)$/;"	f
ft_putstr_int2	../libft/ft_cs.c	/^static int		ft_putstr_int2(char *str, t_flags *flags)$/;"	f	file:
ft_putzero	../libft/ft_fct.c	/^int				ft_putzero(void)$/;"	f
ft_reverse	../libft/ft_itoa.c	/^static char			ft_reverse(char *s)$/;"	f	file:
ft_send	../libft/get_next_line_utils.c	/^char		*ft_send(t_list_gnl **lst, char **line)$/;"	f
ft_split	../libft/ft_split.c	/^char			**ft_split(char const *s, char c)$/;"	f
ft_splitnum	../libft/ft_splitnum.c	/^char			**ft_splitnum(char *s, int c)$/;"	f
ft_start_str	../libft/ft_start_str.c	/^int		ft_start_str(char *str1, char *str2)$/;"	f
ft_strchr	../libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strdup	../libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strjoin	../libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strjoin_free	../libft/ft_strjoin_free.c	/^char	*ft_strjoin_free(char *s1, char *s2, int k)$/;"	f
ft_strjoin_malloc	../libft/get_next_line_utils.c	/^char		*ft_strjoin_malloc(char *s1, char *s2)$/;"	f
ft_strlcat	../libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t dstsize)$/;"	f
ft_strlcpy	../libft/ft_strlcpy.c	/^size_t		ft_strlcpy(char *dst, const char *src, size_t dstsize)$/;"	f
ft_strlen	../libft/ft_strlen.c	/^int		ft_strlen(const char *s)$/;"	f
ft_strlen_no_ws	../libft/ft_strlen_no_ws.c	/^int		ft_strlen_no_ws(char *str)$/;"	f
ft_strmapi	../libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncmp	../libft/ft_strncmp.c	/^int		ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strnstr	../libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	../libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strsubstr	../libft/ft_strsubstr.c	/^char		*ft_strsubstr(char *s1, char *sub)$/;"	f
ft_strsubstr_free	../libft/ft_strsubstr_free.c	/^char		*ft_strsubstr_free(char *s1, char *sub)$/;"	f
ft_strtrim	../libft/ft_strtrim.c	/^char			*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_substr	../libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f
ft_tolower	../libft/ft_tolower.c	/^int		ft_tolower(int c)$/;"	f
ft_toupper	../libft/ft_toupper.c	/^int		ft_toupper(int c)$/;"	f
ft_width	../libft/ft_flags.c	/^void		ft_width(va_list ap, t_flags *flags, char **str, int i)$/;"	f
ft_words	../libft/ft_split.c	/^static int		ft_words(char *s, char c)$/;"	f	file:
full_map	../parsing/full_map.c	/^void		full_map(t_map *map)$/;"	f
func_t	../minilibx/mlx_int.h	/^typedef int (*func_t)();$/;"	t
get_next_line	../libft/get_next_line.c	/^int			get_next_line(int fd, char **line)$/;"	f
glsl_info_s	../minilibx/mlx_int.h	/^typedef struct	glsl_info_s$/;"	s
glsl_info_t	../minilibx/mlx_int.h	/^} glsl_info_t;$/;"	t	typeref:struct:glsl_info_s
gx	../minilibx/recherche.vim	/^nmap gx <Plug>NetrwBrowseX$/;"	m
gx	../minilibx/recherche.vim	/^vmap gx <Plug>NetrwBrowseXVis$/;"	m
gx	../parsing/!parsing.vim	/^nmap gx <Plug>NetrwBrowseX$/;"	m
gx	../parsing/!parsing.vim	/^vmap gx <Plug>NetrwBrowseXVis$/;"	m
gx	../parsing/parsing.vim	/^nmap gx <Plug>NetrwBrowseX$/;"	m
gx	../parsing/parsing.vim	/^vmap gx <Plug>NetrwBrowseXVis$/;"	m
height	../cub3d.h	/^	int		height;$/;"	m	struct:s_image
height	../minilibx/font.c	/^  unsigned int 	 height;$/;"	m	struct:__anon1	file:
height	../minilibx/mlx_int.h	/^  int			height;$/;"	m	struct:mlx_img_list_s
height	../minilibx/mlx_png.c	/^  unsigned int	height;$/;"	m	struct:png_info_s	file:
height	../test.c	/^	int		height;$/;"	m	struct:s_image	file:
image	../cub3d.h	/^	void	*image;$/;"	m	struct:s_image
image	../test.c	/^	void	*image;$/;"	m	struct:s_image	file:
image_fshader	../minilibx/mlx_int.h	/^  GLuint	image_fshader;$/;"	m	struct:glsl_info_s
image_program	../minilibx/mlx_int.h	/^  GLuint	image_program;$/;"	m	struct:glsl_info_s
image_vshader	../minilibx/mlx_int.h	/^  GLuint	image_vshader;$/;"	m	struct:glsl_info_s
img	../cub3d.h	/^	t_image				*img;$/;"	m	struct:s_data
img	../cub3d.h	/^	t_image				*img;$/;"	m	struct:s_mini
img	../minilibx/mlx_int.h	/^  mlx_img_list_t	*img;$/;"	m	struct:mlx_img_ctx_s
img_list	../minilibx/mlx_int.h	/^  mlx_img_ctx_t		*img_list;$/;"	m	struct:mlx_win_list_s
img_list	../minilibx/mlx_int.h	/^  mlx_img_list_t	*img_list;$/;"	m	struct:mlx_ptr_s
init_struct	../parsing/error_free.c	/^void		init_struct(t_elem *elem)$/;"	f
interlace	../minilibx/mlx_png.c	/^  int		interlace;$/;"	m	struct:png_info_s	file:
is_tab_full	../libft/is_tab_full.c	/^int		is_tab_full(char *tab, char c)$/;"	f
key_press	../main_test.c	/^int	key_press(int key, t_data *D)$/;"	f
line	../cub3d.h	/^	t_lmap				*line;$/;"	m	struct:s_map
line_len	../cub3d.h	/^	int					line_len;$/;"	m	struct:s_map
loc_font_atlassize	../minilibx/mlx_int.h	/^  GLint		loc_font_atlassize;$/;"	m	struct:glsl_info_s
loc_font_color	../minilibx/mlx_int.h	/^  GLint		loc_font_color;$/;"	m	struct:glsl_info_s
loc_font_posinatlas	../minilibx/mlx_int.h	/^  GLint		loc_font_posinatlas;$/;"	m	struct:glsl_info_s
loc_font_posinwin	../minilibx/mlx_int.h	/^  GLint		loc_font_posinwin;$/;"	m	struct:glsl_info_s
loc_font_position	../minilibx/mlx_int.h	/^  GLint		loc_font_position;$/;"	m	struct:glsl_info_s
loc_font_texture	../minilibx/mlx_int.h	/^  GLint		loc_font_texture;$/;"	m	struct:glsl_info_s
loc_font_winhalfsize	../minilibx/mlx_int.h	/^  GLint		loc_font_winhalfsize;$/;"	m	struct:glsl_info_s
loc_image_pos	../minilibx/mlx_int.h	/^  GLint		loc_image_pos;$/;"	m	struct:glsl_info_s
loc_image_position	../minilibx/mlx_int.h	/^  GLint		loc_image_position;$/;"	m	struct:glsl_info_s
loc_image_size	../minilibx/mlx_int.h	/^  GLint		loc_image_size;$/;"	m	struct:glsl_info_s
loc_image_texture	../minilibx/mlx_int.h	/^  GLint		loc_image_texture;$/;"	m	struct:glsl_info_s
loc_image_winhalfsize	../minilibx/mlx_int.h	/^  GLint		loc_image_winhalfsize;$/;"	m	struct:glsl_info_s
loc_pixel_position	../minilibx/mlx_int.h	/^  GLint		loc_pixel_position;$/;"	m	struct:glsl_info_s
loc_pixel_texture	../minilibx/mlx_int.h	/^  GLint		loc_pixel_texture;$/;"	m	struct:glsl_info_s
loc_pixel_winhalfsize	../minilibx/mlx_int.h	/^  GLint		loc_pixel_winhalfsize;$/;"	m	struct:glsl_info_s
loop_hook	../minilibx/mlx_int.h	/^  void			(*loop_hook)(void *);$/;"	m	struct:mlx_ptr_s
loop_hook_data	../minilibx/mlx_int.h	/^  void			*loop_hook_data;$/;"	m	struct:mlx_ptr_s
loop_timer	../minilibx/mlx_int.h	/^  void			*loop_timer;$/;"	m	struct:mlx_ptr_s
magic	../minilibx/mlx_png.c	/^unsigned char magic[PNG_MAGIC_SIZE] = {137, 80, 78, 71, 13, 10, 26, 10};$/;"	v
main	../main_test.c	/^int main(int argc, char **argv)$/;"	f
main	../minilibx/main_test.c	/^int main(void)$/;"	f
main	../test.c	/^int main(int argc, char **argv)$/;"	f
main_loop_active	../minilibx/mlx_int.h	/^  int			main_loop_active;$/;"	m	struct:mlx_ptr_s
map	../cub3d.h	/^	t_map				*map;$/;"	m	struct:s_data
map_color_case	../display_map.c	/^void		map_color_case(t_data *D, int x, int y, int t_case)$/;"	f
map_str	../parsing/full_map.c	/^void		map_str(char *str, t_map *map)$/;"	f
mini	../cub3d.h	/^	t_mini				*mini;$/;"	m	struct:s_data
mini_map	../display_map.c	/^void		mini_map(t_data *D, t_elem *elem)$/;"	f
mipng_crc	../minilibx/mlx_png.c	/^int	mipng_crc(unsigned char *ptr, int len)$/;"	f
mipng_data	../minilibx/mlx_png.c	/^int	mipng_data(mlx_img_list_t *img, unsigned char *dat, png_info_t *pi)$/;"	f
mipng_defilter	../minilibx/mlx_png.c	/^unsigned char (*(mipng_defilter[]))(unsigned char *buff, int pos, int a, int b, int c) =$/;"	v
mipng_defilter_average	../minilibx/mlx_png.c	/^unsigned char mipng_defilter_average(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_none	../minilibx/mlx_png.c	/^unsigned char mipng_defilter_none(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_paeth	../minilibx/mlx_png.c	/^unsigned char mipng_defilter_paeth(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_sub	../minilibx/mlx_png.c	/^unsigned char mipng_defilter_sub(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_up	../minilibx/mlx_png.c	/^unsigned char mipng_defilter_up(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_err	../minilibx/mlx_png.c	/^char *(mipng_err[]) =$/;"	v
mipng_fill_img	../minilibx/mlx_png.c	/^int	mipng_fill_img(mlx_img_list_t *img, unsigned char *buf, png_info_t *pi)$/;"	f
mipng_is_type	../minilibx/mlx_png.c	/^int	mipng_is_type(unsigned char *ptr, char *type)$/;"	f
mipng_magic	../minilibx/mlx_png.c	/^int	mipng_magic(unsigned char *ptr, int size)$/;"	f
mipng_structure	../minilibx/mlx_png.c	/^int	mipng_structure(unsigned char *ptr, int size, unsigned char **hdr, unsigned char **dat)$/;"	f
mipng_verif_hdr	../minilibx/mlx_png.c	/^int	mipng_verif_hdr(unsigned char *hdr, png_info_t *pi)$/;"	f
mlx_col_name	../minilibx/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name
mlx_img_ctx_s	../minilibx/mlx_int.h	/^typedef struct	mlx_img_ctx_s$/;"	s
mlx_img_ctx_t	../minilibx/mlx_int.h	/^} mlx_img_ctx_t;$/;"	t	typeref:struct:mlx_img_ctx_s
mlx_img_list_s	../minilibx/mlx_int.h	/^typedef struct	mlx_img_list_s$/;"	s
mlx_img_list_t	../minilibx/mlx_int.h	/^} mlx_img_list_t;$/;"	t	typeref:struct:mlx_img_list_s
mlx_int_file_get_rid_comment	../minilibx/mlx_xpm.c	/^void	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f
mlx_int_get_col_name	../minilibx/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f
mlx_int_get_line	../minilibx/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f
mlx_int_get_text_rgb	../minilibx/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f
mlx_int_parse_png	../minilibx/mlx_png.c	/^mlx_img_list_t	*mlx_int_parse_png(mlx_ptr_t *xvar, unsigned char *fptr, int size)$/;"	f
mlx_int_parse_xpm	../minilibx/mlx_xpm.c	/^void	*mlx_int_parse_xpm(mlx_ptr_t *xvar,void *info,int info_size,char *(*f)())$/;"	f
mlx_int_static_line	../minilibx/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f
mlx_int_str_str	../minilibx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f
mlx_int_str_str_cote	../minilibx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f
mlx_int_str_to_wordtab	../minilibx/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f
mlx_int_xpm_set_pixel	../minilibx/mlx_xpm.c	/^void	mlx_int_xpm_set_pixel(mlx_img_list_t *img, char *D, int opp, int col, int x)$/;"	f
mlx_png_file_to_image	../minilibx/mlx_png.c	/^void	*mlx_png_file_to_image(mlx_ptr_t *xvar, char *file, int *width, int *height)$/;"	f
mlx_ptr	../cub3d.h	/^	void				*mlx_ptr;$/;"	m	struct:s_data
mlx_ptr	../minilibx/main_test.c	/^    void          *mlx_ptr;$/;"	m	struct:data_s	file:
mlx_ptr	../test.c	/^	void				*mlx_ptr;$/;"	m	struct:data_s	file:
mlx_ptr_s	../minilibx/mlx_int.h	/^typedef struct		mlx_ptr_s$/;"	s
mlx_ptr_t	../minilibx/mlx_int.h	/^} mlx_ptr_t;$/;"	t	typeref:struct:mlx_ptr_s
mlx_shaders	../minilibx/mlx_shaders.c	/^int mlx_shaders(glsl_info_t *glsl)$/;"	f
mlx_shaders_font	../minilibx/mlx_shaders.c	/^int mlx_shaders_font(glsl_info_t *glsl)$/;"	f
mlx_shaders_image	../minilibx/mlx_shaders.c	/^int mlx_shaders_image(glsl_info_t *glsl)$/;"	f
mlx_shaders_pixel	../minilibx/mlx_shaders.c	/^int mlx_shaders_pixel(glsl_info_t *glsl)$/;"	f
mlx_win	../cub3d.h	/^	void				*mlx_win;$/;"	m	struct:s_data
mlx_win	../minilibx/main_test.c	/^    void          *mlx_win;$/;"	m	struct:data_s	file:
mlx_win	../test.c	/^	void				*mlx_win;$/;"	m	struct:data_s	file:
mlx_win_list_s	../minilibx/mlx_int.h	/^typedef struct	mlx_win_list_s$/;"	s
mlx_win_list_t	../minilibx/mlx_int.h	/^} mlx_win_list_t;$/;"	t	typeref:struct:mlx_win_list_s
mlx_xpm_file_to_image	../minilibx/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(mlx_ptr_t *xvar,char *file,int *width,int *height)$/;"	f
mlx_xpm_to_image	../minilibx/mlx_xpm.c	/^void	*mlx_xpm_to_image(mlx_ptr_t *xvar,char **xpm_data,int *width,int *height)$/;"	f
name	../minilibx/mlx_xpm.c	/^  char  *name;$/;"	m	struct:s_col_name	file:
name	../minilibx/mlx_xpm.c	/^  int           name;$/;"	m	struct:s_xpm_col	file:
nb_flush	../minilibx/mlx_int.h	/^  int			nb_flush;$/;"	m	struct:mlx_win_list_s
next	../cub3d.h	/^	struct s_lmap		*next;$/;"	m	struct:s_lmap	typeref:struct:s_lmap::s_lmap
next	../libft/libft.h	/^	struct s_list		*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
next	../libft/libft.h	/^	struct s_list_gnl	*next;$/;"	m	struct:s_list_gnl	typeref:struct:s_list_gnl::s_list_gnl
next	../minilibx/mlx_int.h	/^  struct mlx_img_ctx_s	*next;$/;"	m	struct:mlx_img_ctx_s	typeref:struct:mlx_img_ctx_s::mlx_img_ctx_s
next	../minilibx/mlx_int.h	/^  struct mlx_img_list_s	*next;$/;"	m	struct:mlx_img_list_s	typeref:struct:mlx_img_list_s::mlx_img_list_s
next	../minilibx/mlx_int.h	/^  struct mlx_win_list_s	*next;$/;"	m	struct:mlx_win_list_s	typeref:struct:mlx_win_list_s::mlx_win_list_s
num_P	../parsing/parsing.c	/^int			num_P(t_elem *elem, t_map *map)$/;"	f
num_P2	../parsing/parsing.c	/^int			num_P2(t_elem *elem, int j, int h)$/;"	f
parsing	../parsing/parsing.c	/^t_elem		*parsing(char *doc_map)$/;"	f
parsing_elem	../parsing/parsing_elem.c	/^void		parsing_elem(char *str, t_elem *elem)$/;"	f
pixel_data	../minilibx/font.c	/^  unsigned char	 pixel_data[1140 * 20 * 4 + 1];$/;"	m	struct:__anon1	file:
pixel_fshader	../minilibx/mlx_int.h	/^  GLuint	pixel_fshader;$/;"	m	struct:glsl_info_s
pixel_program	../minilibx/mlx_int.h	/^  GLuint	pixel_program;$/;"	m	struct:glsl_info_s
pixel_vshader	../minilibx/mlx_int.h	/^  GLuint	pixel_vshader;$/;"	m	struct:glsl_info_s
pixmgt	../minilibx/mlx_int.h	/^  int			pixmgt;$/;"	m	struct:mlx_win_list_s
P	../cub3d.h	/^	t_player			*P;$/;"	m	struct:s_data
png_info_s	../minilibx/mlx_png.c	/^typedef struct png_info_s$/;"	s	file:
png_info_t	../minilibx/mlx_png.c	/^} png_info_t;$/;"	t	typeref:struct:png_info_s	file:
pos_x	../cub3d.h	/^	double				pos_x;$/;"	m	struct:s_P
pos_y	../cub3d.h	/^	double				pos_y;$/;"	m	struct:s_P
precis	../libft/ft_printf.h	/^	int			precis;$/;"	m	struct:s_flags
read	../libft/libft.h	/^	int					read;$/;"	m	struct:s_list_gnl
rslt	../libft/ft_printf.h	/^	int			rslt;$/;"	m	struct:s_flags
s:cpo_save	../minilibx/recherche.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	../parsing/!parsing.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	../parsing/parsing.vim	/^let s:cpo_save=&cpo$/;"	v
s:l	../minilibx/recherche.vim	/^let s:l = 28 - ((27 * winheight(0) + 40) \/ 81)$/;"	v
s:l	../minilibx/recherche.vim	/^let s:l = 59 - ((55 * winheight(0) + 40) \/ 81)$/;"	v
s:l	../minilibx/recherche.vim	/^let s:l = 736 - ((0 * winheight(0) + 40) \/ 81)$/;"	v
s:l	../parsing/!parsing.vim	/^let s:l = 1 - ((0 * winheight(0) + 40) \/ 81)$/;"	v
s:l	../parsing/!parsing.vim	/^let s:l = 24 - ((22 * winheight(0) + 23) \/ 47)$/;"	v
s:l	../parsing/!parsing.vim	/^let s:l = 98 - ((25 * winheight(0) + 16) \/ 33)$/;"	v
s:l	../parsing/parsing.vim	/^let s:l = 1 - ((0 * winheight(0) + 16) \/ 33)$/;"	v
s:l	../parsing/parsing.vim	/^let s:l = 1 - ((0 * winheight(0) + 24) \/ 48)$/;"	v
s:l	../parsing/parsing.vim	/^let s:l = 1 - ((0 * winheight(0) + 41) \/ 82)$/;"	v
s:so_save	../minilibx/recherche.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	../parsing/!parsing.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	../parsing/parsing.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:sx	../minilibx/recherche.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	../parsing/!parsing.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	../parsing/parsing.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:wipebuf	../minilibx/recherche.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	../parsing/!parsing.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	../parsing/parsing.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s_col_name	../minilibx/mlx_xpm.c	/^struct  s_col_name$/;"	s	file:
s_data	../cub3d.h	/^typedef struct			s_data$/;"	s
s_elem	../cub3d.h	/^typedef struct			s_elem$/;"	s
s_flags	../libft/ft_printf.h	/^typedef struct	s_flags$/;"	s
s_image	../cub3d.h	/^typedef struct	s_image$/;"	s
s_image	../test.c	/^typedef struct	s_image$/;"	s	file:
s_list	../libft/libft.h	/^typedef struct			s_list$/;"	s
s_list_gnl	../libft/libft.h	/^typedef struct			s_list_gnl$/;"	s
s_lmap	../cub3d.h	/^typedef struct			s_lmap$/;"	s
s_map	../cub3d.h	/^typedef struct			s_map$/;"	s
s_mini	../cub3d.h	/^typedef struct			s_mini$/;"	s
s_P	../cub3d.h	/^typedef struct			s_P$/;"	s
s_xpm_col	../minilibx/mlx_xpm.c	/^typedef struct  s_xpm_col$/;"	s	file:
search_fd	../libft/get_next_line.c	/^int			search_fd(t_list_gnl **lst_one, int fd)$/;"	f
size	../cub3d.h	/^	int					size;$/;"	m	struct:s_lmap
size_l	../cub3d.h	/^	int		size_l;$/;"	m	struct:s_image
size_l	../test.c	/^	int		size_l;$/;"	m	struct:s_image	file:
str	../cub3d.h	/^	char				*str;$/;"	m	struct:s_lmap
str	../libft/libft.h	/^	char				*str;$/;"	m	struct:s_list_gnl
t_case	../cub3d.h	/^	int					t_case;$/;"	m	struct:s_mini
t_data	../cub3d.h	/^}						t_data;$/;"	t	typeref:struct:s_data
t_elem	../cub3d.h	/^}						t_elem;$/;"	t	typeref:struct:s_elem
t_flags	../libft/ft_printf.h	/^}				t_flags;$/;"	t	typeref:struct:s_flags
t_image	../cub3d.h	/^}				t_image;$/;"	t	typeref:struct:s_image
t_image	../test.c	/^}				t_image;$/;"	t	typeref:struct:s_image	file:
t_list	../libft/libft.h	/^}						t_list;$/;"	t	typeref:struct:s_list
t_list_gnl	../libft/libft.h	/^}						t_list_gnl;$/;"	t	typeref:struct:s_list_gnl
t_lmap	../cub3d.h	/^}						t_lmap;$/;"	t	typeref:struct:s_lmap
t_map	../cub3d.h	/^}						t_map;$/;"	t	typeref:struct:s_map
t_mini	../cub3d.h	/^}						t_mini;$/;"	t	typeref:struct:s_mini
t_player	../cub3d.h	/^}						t_player;$/;"	t	typeref:struct:s_P
t_xpm_col	../minilibx/mlx_xpm.c	/^} t_xpm_col;$/;"	t	typeref:struct:s_xpm_col	file:
tab_line	../cub3d.h	/^	int					tab_line;$/;"	m	struct:s_map
tab_map	../cub3d.h	/^	char				**tab_map;$/;"	m	struct:s_map
texture	../cub3d.h	/^	char				**texture;$/;"	m	struct:s_elem
texture	../minilibx/mlx_int.h	/^  GLuint		texture;$/;"	m	struct:mlx_img_ctx_s
vbuffer	../minilibx/mlx_int.h	/^  GLuint		vbuffer;$/;"	m	struct:mlx_img_ctx_s
vertexes	../minilibx/mlx_int.h	/^  GLfloat		vertexes[8];$/;"	m	struct:mlx_img_list_s
vitess	../cub3d.h	/^	double				vitess;$/;"	m	struct:s_P
width	../cub3d.h	/^	int		width;$/;"	m	struct:s_image
width	../libft/ft_printf.h	/^	int			width;$/;"	m	struct:s_flags
width	../minilibx/font.c	/^  unsigned int 	 width;$/;"	m	struct:__anon1	file:
width	../minilibx/mlx_int.h	/^  int			width;$/;"	m	struct:mlx_img_list_s
width	../minilibx/mlx_png.c	/^  unsigned int	width;$/;"	m	struct:png_info_s	file:
width	../test.c	/^	int		width;$/;"	m	struct:s_image	file:
win_list	../minilibx/mlx_int.h	/^  mlx_win_list_t	*win_list;$/;"	m	struct:mlx_ptr_s
winid	../minilibx/mlx_int.h	/^  void			*winid;$/;"	m	struct:mlx_win_list_s
x_max	../cub3d.h	/^	int					x_max;$/;"	m	struct:s_map
y_max	../cub3d.h	/^	int					y_max;$/;"	m	struct:s_map
zt	../minilibx/recherche.vim	/^normal! zt$/;"	m
zt	../parsing/!parsing.vim	/^normal! zt$/;"	m
zt	../parsing/parsing.vim	/^normal! zt$/;"	m
